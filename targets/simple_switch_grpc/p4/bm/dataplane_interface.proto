// Copyright 2013-present Barefoot Networks, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

// This package and its contents are a work-in-progress.

import "google/protobuf/empty.proto";

package p4.bm;

service DataplaneInterface {
  rpc PacketStream(stream PacketStreamRequest)
      returns (stream PacketStreamResponse) {
  }

  // A one-way RPC to set the operational status of a given port (by default all
  // ports are valid and "UP"). This is useful in the context of testing, to
  // simulate port-up / port-down events.
  rpc SetPortOperStatus(SetPortOperStatusRequest)
      returns (google.protobuf.Empty) {
  }
}

message PacketStreamRequest {
  uint64 device_id = 1;
  uint32 port = 2;
  bytes packet = 3;
}

message PacketStreamResponse {
  uint64 device_id = 1;
  uint32 port = 2;
  bytes packet = 3;
}

enum PortOperStatus {
  OPER_STATUS_UNKNOWN = 0;
  OPER_STATUS_DOWN = 1;
  OPER_STATUS_UP = 2;
}

message SetPortOperStatusRequest {
  uint64 device_id = 1;
  uint32 port = 2;
  PortOperStatus oper_status = 3;
}
