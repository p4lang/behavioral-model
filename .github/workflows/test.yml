name: Test

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  check-changes:
    name: Check whether tests need to be run based on diff
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - uses: antrea-io/has-changes@v2
      id: check_diff
      with:
        paths-ignore: docs/* *.md
    outputs:
      has_changes: ${{ steps.check_diff.outputs.has_changes }}

  test:
    needs: check-changes
    if: ${{ needs.check-changes.outputs.has_changes == 'yes' }}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        include:
        - cxx: g++
          cc: gcc
        - cxx: clang++-8
          cc: clang-8
        - cxx: clang++-10
          cc: clang-10
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: Install system dependencies
      run: |
        # Switch to alternative mirrors
        sudo sed -i 's|http://archive.ubuntu.com/ubuntu|http://mirror.ubuntu.com/ubuntu|g' /etc/apt/sources.list
        sudo sed -i 's|http://security.ubuntu.com/ubuntu|http://mirror.ubuntu.com/ubuntu|g' /etc/apt/sources.list
        
        # Retry mechanism for apt-get update
        for i in {1..3}; do
          sudo apt-get update && break || {
            if [ $i -eq 3 ]; then
              echo "Failed to update package lists after 3 attempts"
              exit 1
            fi
            echo "Retrying apt-get update... (Attempt $i)"
            sleep 5
          }
        done
        
        # Remove conflicting packages with retry
        for i in {1..3}; do
          sudo apt-get remove -y containerd moby-containerd containerd.io && break || {
            if [ $i -eq 3 ]; then
              echo "Failed to remove packages after 3 attempts"
              exit 1
            fi
            echo "Retrying package removal... (Attempt $i)"
            sleep 5
          }
        done
        
        # Clean up with retry
        for i in {1..3}; do
          sudo apt-get autoremove -y && break || {
            if [ $i -eq 3 ]; then
              echo "Failed to autoremove packages after 3 attempts"
              exit 1
            fi
            echo "Retrying autoremove... (Attempt $i)"
            sleep 5
          }
        done
        
        # Install docker.io with retry
        for i in {1..3}; do
          sudo apt-get install -y docker.io=20.10.* && break || {
            if [ $i -eq 3 ]; then
              echo "Failed to install docker.io after 3 attempts"
              exit 1
            fi
            echo "Retrying docker.io installation... (Attempt $i)"
            sleep 5
          }
        done
        
        # Start docker service
        sudo systemctl start docker
        sudo docker --version
    - name: Build test Docker image
      env:
        CC: ${{ matrix.cc }}
        CXX: ${{ matrix.cxx }}
        GCOV: ""
      run: |
        echo "Building with CC=$CC CXX=$CXX"
        docker build -t bm --build-arg IMAGE_TYPE=test --build-arg CC=$CC --build-arg CXX=$CXX --build-arg GCOV=$GCOV . 2>&1 | tee docker-build.log
        if [ ${PIPESTATUS[0]} -ne 0 ]; then
          echo "Docker build failed. Log:"
          cat docker-build.log
          exit 1
        fi
    - name: Run tests
      run: |
        echo "Running tests..."
        ci_env=`bash <(curl -s https://codecov.io/env)`
        docker run --rm $ci_env --env GCOV -w /behavioral-model bm /bin/bash -c "cd build && make check -j$(nproc) && cd .. && ./ci/codecov.sh" 2>&1 | tee test-run.log
        if [ ${PIPESTATUS[0]} -ne 0 ]; then
          echo "Tests failed. Log:"
          cat test-run.log
          exit 1
        fi
    - name: Check style
      run: |
        ./tools/check_style.sh

  test-no-pi:
    needs: check-changes
    if: ${{ needs.check-changes.outputs.has_changes == 'yes' }}
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: Install system dependencies
      run: |
        sudo apt-get update
        # Remove all conflicting container packages
        sudo apt-get remove -y containerd moby-containerd containerd.io || true
        # Clean up any remaining packages
        sudo apt-get autoremove -y
        # Update package lists again
        sudo apt-get update
        # Install docker.io with specific version to avoid conflicts
        sudo apt-get install -y docker.io=20.10.*
        # Start docker service
        sudo systemctl start docker
        # Verify docker is running
        sudo docker --version
    - name: Build Dockerfile.noPI image
      run: |
        echo "Building noPI image..."
        docker build -t bm-no-pi --build-arg IMAGE_TYPE=test -f Dockerfile.noPI . 2>&1 | tee docker-build-nopi.log
        if [ ${PIPESTATUS[0]} -ne 0 ]; then
          echo "Docker build failed. Log:"
          cat docker-build-nopi.log
          exit 1
        fi
    - name: Build BMv2 inside Docker
      run: |
        echo "Building BMv2 inside Docker..."
        docker run --rm -w /behavioral-model bm-no-pi /bin/bash -c "
          mkdir -p build &&
          cd build &&
          cmake -DWITH_PDFIXED=ON -DWITH_PI=OFF -DWITH_STRESS_TESTS=ON -DENABLE_DEBUGGER=ON -DENABLE_WERROR=ON .. &&
          make -j$(nproc)" 2>&1 | tee build-nopi.log
        if [ ${PIPESTATUS[0]} -ne 0 ]; then
          echo "Build failed. Log:"
          cat build-nopi.log
          exit 1
        fi
    - name: Run tests
      run: |
        echo "Running tests..."
        docker run --rm -w /behavioral-model bm-no-pi /bin/bash -c "cd build && make check -j$(nproc)" 2>&1 | tee test-run-nopi.log
        if [ ${PIPESTATUS[0]} -ne 0 ]; then
          echo "Tests failed. Log:"
          cat test-run-nopi.log
          exit 1
        fi

  test-ubuntu22:
    needs: check-changes
    if: ${{ needs.check-changes.outputs.has_changes == 'yes' }}
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        fetch-depth: 0
    - name: Install system dependencies
      run: |
        sudo apt-get update
        # Remove all conflicting container packages
        sudo apt-get remove -y containerd moby-containerd containerd.io || true
        # Clean up any remaining packages
        sudo apt-get autoremove -y
        # Update package lists again
        sudo apt-get update
        # Install docker.io with specific version to avoid conflicts
        sudo apt-get install -y docker.io=20.10.*
        # Start docker service
        sudo systemctl start docker
        # Verify docker is running
        sudo docker --version
    - name: Build test Docker image
      run: |
        echo "Building test image..."
        docker build -t bm --build-arg IMAGE_TYPE=test . 2>&1 | tee docker-build-ubuntu22.log
        if [ ${PIPESTATUS[0]} -ne 0 ]; then
          echo "Docker build failed. Log:"
          cat docker-build-ubuntu22.log
          exit 1
        fi
    - name: Run tests
      run: |
        echo "Running tests..."
        docker run --rm -w /behavioral-model bm /bin/bash -c "cd build && make check -j$(nproc)" 2>&1 | tee test-run-ubuntu22.log
        if [ ${PIPESTATUS[0]} -ne 0 ]; then
          echo "Tests failed. Log:"
          cat test-run-ubuntu22.log
          exit 1
        fi
